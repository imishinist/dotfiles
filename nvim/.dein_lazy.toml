[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'


[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_add = '''
let g:deoplete#omni_patterns = {}
let g:deoplete#omni_patterns.ruby =  ['[^. *\t]\.\w*', '[a-zA-Z_]\w*::']
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = 'cpp'
hook_add = '''
let g:deoplete#sources#clang#libclang_path = '/usr/local/Cellar/llvm/3.8.1/lib/libclang.dylib'
let g:deoplete#sources#clang#clang_header = '/usr/local/opt/llvm/lib/clang'
'''

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
hook_add = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#package_dot = 1
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory = expand('~/.cache/deoplete/go')
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1

let g:go_fmt_command = "goimports"
let g:go_bin_path = expand($GOPATH + "/bin")

let g:go_term_omde = "split"
let g:go_term_enabled = 1
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
		\ }
'''

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = 'ruby'
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_source = ['deoplete']

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo      = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo = 'kmnk/vim-unite-giti'
on_source = ['unite.vim']

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_source = ['unite.vim']

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = ['unite.vim']

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = 'ruby'

[[plugins]]
repo = 'vim-scripts/ruby-matchit'
on_ft = 'ruby'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'
on_source = ['vim-quickrun']

